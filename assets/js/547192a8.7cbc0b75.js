"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[424],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>c});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=p(a),c=r,b=m["".concat(s,".").concat(c)]||m[c]||d[c]||l;return a?n.createElement(b,i(i({ref:t},u),{},{components:a})):n.createElement(b,i({ref:t},u))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(7294),r=a(6010);const l="tabItem_Ymn6";function i(e){let{children:t,hidden:a,className:i}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(l,i),hidden:a},t)}},5488:(e,t,a)=>{a.d(t,{Z:()=>c});var n=a(7462),r=a(7294),l=a(6010),i=a(2389),o=a(7392),s=a(7094),p=a(2466);const u="tabList__CuJ",d="tabItem_LNqP";function m(e){var t;const{lazy:a,block:i,defaultValue:m,values:c,groupId:b,className:k}=e,h=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),v=c??h.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),y=(0,o.l)(v,((e,t)=>e.value===t.value));if(y.length>0)throw new Error(`Docusaurus error: Duplicate values "${y.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const N=null===m?m:m??(null==(t=h.find((e=>e.props.default)))?void 0:t.props.value)??h[0].props.value;if(null!==N&&!v.some((e=>e.value===N)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${N}" but none of its children has the corresponding value. Available values are: ${v.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:f,setTabGroupChoices:g}=(0,s.U)(),[S,w]=(0,r.useState)(N),L=[],{blockElementScrollPositionUntilNextRender:C}=(0,p.o5)();if(null!=b){const e=f[b];null!=e&&e!==S&&v.some((t=>t.value===e))&&w(e)}const D=e=>{const t=e.currentTarget,a=L.indexOf(t),n=v[a].value;n!==S&&(C(t),w(n),null!=b&&g(b,String(n)))},T=e=>{var t;let a=null;switch(e.key){case"ArrowRight":{const t=L.indexOf(e.currentTarget)+1;a=L[t]??L[0];break}case"ArrowLeft":{const t=L.indexOf(e.currentTarget)-1;a=L[t]??L[L.length-1];break}}null==(t=a)||t.focus()};return r.createElement("div",{className:(0,l.Z)("tabs-container",u)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":i},k)},v.map((e=>{let{value:t,label:a,attributes:i}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:S===t?0:-1,"aria-selected":S===t,key:t,ref:e=>L.push(e),onKeyDown:T,onFocus:D,onClick:D},i,{className:(0,l.Z)("tabs__item",d,null==i?void 0:i.className,{"tabs__item--active":S===t})}),a??t)}))),a?(0,r.cloneElement)(h.filter((e=>e.props.value===S))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},h.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==S})))))}function c(e){const t=(0,i.Z)();return r.createElement(m,(0,n.Z)({key:String(t)},e))}},2281:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>u,contentTitle:()=>s,default:()=>c,frontMatter:()=>o,metadata:()=>p,toc:()=>d});var n=a(7462),r=(a(7294),a(3905)),l=a(5488),i=a(5162);const o={sidebar_position:5,title:"Reward Tiers (Status Levels)",description:"Retrieve available reward tiers"},s="Reward Tiers (Status Levels)",p={unversionedId:"service/reward-tiers",id:"service/reward-tiers",title:"Reward Tiers (Status Levels)",description:"Retrieve available reward tiers",source:"@site/docs/service/reward-tiers.md",sourceDirName:"service",slug:"/service/reward-tiers",permalink:"/PlayStation-Stars/service/reward-tiers",draft:!1,editUrl:"https://github.com/andshrew/PlayStation-Stars/tree/main/website/docs/service/reward-tiers.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,title:"Reward Tiers (Status Levels)",description:"Retrieve available reward tiers"},sidebar:"tutorialSidebar",previous:{title:"Collectible Detail",permalink:"/PlayStation-Stars/service/collectible-detail"},next:{title:"User Endpoints",permalink:"/PlayStation-Stars/category/user-endpoints"}},u={},d=[{value:"Overview",id:"overview",level:2},{value:"Input Parameters",id:"input-parameters",level:2},{value:"Output JSON Response",id:"output-json-response",level:2},{value:"LoyaltyStatusLevelMetaData JSON object",id:"m-json-object-LoyaltyStatusLevelMetaData",level:3},{value:"LoyaltyStatusCollectible JSON object",id:"m-json-object-LoyaltyStatusCollectible",level:3},{value:"Examples with Responses",id:"examples-with-responses",level:2},{value:"Example 1 - Retrieve all reward tiers for the authenticating account",id:"example-1---retrieve-all-reward-tiers-for-the-authenticating-account",level:3}],m={toc:d};function c(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"reward-tiers-status-levels"},"Reward Tiers (Status Levels)"),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"Requests to this endpoint will retrieve the reward tiers that exist within the service."),(0,r.kt)("p",null,'Reward tiers are otherwise known as Status Levels or PlayStation Stars Level. A user can upgrade their level by both purchasing "full games" from the PlayStation Store and earning rare (silver) and better trophies. These must be done after enrolling in the service.'),(0,r.kt)("p",null,"There are 4 earnable tiers in the service. There is an additional (currently undisclosed) 5th tier in the service known as Diamond which the API suggests is by invite only."),(0,r.kt)("p",null,"The endpoint can query the authenticating account only."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"https://m.np.playstation.com/api/graphql/v1/op?operationName=metGetStatusLevels\n")),(0,r.kt)("h2",{id:"input-parameters"},"Input Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,r.kt)("th",{parentName:"tr",align:null},"Value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"operationName"),(0,r.kt)("td",{parentName:"tr",align:null},"metGetStatusLevels")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"variables"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"{}"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"extensions"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'{"persistedQuery":{"version":1,"sha256Hash":"44dff30ed981a73ed8fa8b38fd5e3fa5996fc00bb4d3eb234d2a00c29bb04dd9"}}'))))),(0,r.kt)("h2",{id:"output-json-response"},"Output JSON Response"),(0,r.kt)("p",null,"A JSON response is returned. The following are returned under the ",(0,r.kt)("inlineCode",{parentName:"p"},"data")," attribute."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Example Value"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"loyaltyStatusLevelsMetaDataRetrieve"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"#m-json-object-LoyaltyStatusLevelMetaData"},"JSON object",(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"a"},"LoyaltyStatusLevelMetaData"))),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Contains the tiers which are available in the service")))),(0,r.kt)("h3",{id:"m-json-object-LoyaltyStatusLevelMetaData"},"LoyaltyStatusLevelMetaData JSON object"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Example Response"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"__typename"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"LoyaltyStatusLevelMetaData")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"collectibles"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"null"),(0,r.kt)("br",null),(0,r.kt)("a",{parentName:"td",href:"#m-json-object-LoyaltyStatusCollectible"},"JSON object",(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"a"},"LoyaltyStatusCollectible"))),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Contains the campaigns which are available within this group",(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"null")," if no collectible is awarded for reaching the tier")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"description"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Sapphire Level after on-boarding to Sky Program"),(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"Earn 1 trophy & 1 purchase to earn Garnet"),(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"Earn 32 trophies & 2 purchase to earn Emerald"),(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"Earn 128 trophies & 4 purchase to earn Ruby"),(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"Invite only to Diamond Level")),(0,r.kt)("td",{parentName:"tr",align:null},"Description of what is required to reach this tier")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Sapphire"),(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"Garnet"),(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"Emerald"),(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"Ruby"),(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"Diamond")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the tier")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"statusLevelNumber"),(0,r.kt)("td",{parentName:"tr",align:null},"Numeric"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"1"),(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"2"),(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"3"),(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"4"),(0,r.kt)("br",null),(0,r.kt)("inlineCode",{parentName:"td"},"5")),(0,r.kt)("td",{parentName:"tr",align:null},"Tier number")))),(0,r.kt)("h3",{id:"m-json-object-LoyaltyStatusCollectible"},"LoyaltyStatusCollectible JSON object"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Example Response"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"__typename"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"LoyaltyStatusCollectible")),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"id"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"613ab757-5a88-5f94-a683-26638f830f1b")),(0,r.kt)("td",{parentName:"tr",align:null},"GUID for the collectible")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Level 5 Diorama - Bots Dont Breathe")),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the collectible")))),(0,r.kt)("h2",{id:"examples-with-responses"},"Examples with Responses"),(0,r.kt)("h3",{id:"example-1---retrieve-all-reward-tiers-for-the-authenticating-account"},"Example 1 - Retrieve all reward tiers for the authenticating account"),(0,r.kt)(l.Z,{mdxType:"Tabs"},(0,r.kt)(i.Z,{value:"example1-encoded-url",label:"Encoded URL",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"https://m.np.playstation.com/api/graphql/v1/op?operationName=metGetStatusLevels&variables=%7B%7D&extensions=%7B%22persistedQuery%22%3A%7B%22version%22%3A1%2C%22sha256Hash%22%3A%2244dff30ed981a73ed8fa8b38fd5e3fa5996fc00bb4d3eb234d2a00c29bb04dd9%22%7D%7D\n"))),(0,r.kt)(i.Z,{value:"example1-raw-url",label:"Raw URL",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'https://m.np.playstation.com/api/graphql/v1/op?operationName=metGetStatusLevels&variables={}&extensions={"persistedQuery":{"version":1,"sha256Hash":"44dff30ed981a73ed8fa8b38fd5e3fa5996fc00bb4d3eb234d2a00c29bb04dd9"}}\n'))),(0,r.kt)(i.Z,{value:"example1-raw-pwsh",label:"PowerShell",mdxType:"TabItem"},(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"See ",(0,r.kt)("a",{parentName:"em",href:"../query-api"},"using PowerShell to query the API"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-powershell"},'Invoke-RestMethod -Uri \'https://m.np.playstation.com/api/graphql/v1/op?operationName=metGetStatusLevels&variables={}&extensions={"persistedQuery":{"version":1,"sha256Hash":"44dff30ed981a73ed8fa8b38fd5e3fa5996fc00bb4d3eb234d2a00c29bb04dd9"}}\' -Authentication Bearer -Token $token\n')))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Click to view full JSON response"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "data": {\n    "loyaltyStatusLevelsMetaDataRetrieve": [\n      {\n        "__typename": "LoyaltyStatusLevelMetaData",\n        "collectibles": [\n          {\n            "__typename": "LoyaltyStatusCollectible",\n            "id": "6bc02f35-5051-541d-af0e-68392e320039",\n            "name": "Level 3 Diorama - A Robot Runs Through It"\n          }\n        ],\n        "description": "Earn 32 trophies & 2 purchase to earn Emerald",\n        "name": "Emerald",\n        "statusLevelNumber": 3\n      },\n      {\n        "__typename": "LoyaltyStatusLevelMetaData",\n        "collectibles": [],\n        "description": "Sapphire Level after on-boarding to Sky Program",\n        "name": "Sapphire",\n        "statusLevelNumber": 1\n      },\n      {\n        "__typename": "LoyaltyStatusLevelMetaData",\n        "collectibles": [\n          {\n            "__typename": "LoyaltyStatusCollectible",\n            "id": "fcea5464-fb42-582a-8a06-fbba6d41ab4a",\n            "name": "Level 4 Diorama - Space Settlers"\n          }\n        ],\n        "description": "Earn 128 trophies & 4 purchase to earn Ruby",\n        "name": "Ruby",\n        "statusLevelNumber": 4\n      },\n      {\n        "__typename": "LoyaltyStatusLevelMetaData",\n        "collectibles": [\n          {\n            "__typename": "LoyaltyStatusCollectible",\n            "id": "613ab757-5a88-5f94-a683-26638f830f1b",\n            "name": "Level 5 Diorama - Bots Don\'t Breathe"\n          }\n        ],\n        "description": "Invite only to Diamond Level",\n        "name": "Diamond",\n        "statusLevelNumber": 5\n      },\n      {\n        "__typename": "LoyaltyStatusLevelMetaData",\n        "collectibles": [\n          {\n            "__typename": "LoyaltyStatusCollectible",\n            "id": "d45437ef-3c4b-5767-b8a4-54854507fad1",\n            "name": "Level 2 Diorama - The Astro Walk"\n          }\n        ],\n        "description": "Earn 1 trophy & 1 purchase to earn Garnet",\n        "name": "Garnet",\n        "statusLevelNumber": 2\n      }\n    ]\n  }\n}\n'))))}c.isMDXComponent=!0}}]);